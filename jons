<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>متجر دروبشيبينج</title>
  <style>
    * {
      box-sizing: border-box;
    }
    body {
      margin: 0; padding: 0;
      font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
      background: #f3f4f6;
      color: #222;
    }
    header {
      background-color: #007bff;
      color: white;
      display: flex;
      align-items: center;
      padding: 15px 20px;
      gap: 15px;
    }
    .logo {
      font-size: 24px;
      font-weight: bold;
      flex: 1;
    }
    #searchInput {
      flex: 2;
      padding: 8px 12px;
      border-radius: 6px;
      border: none;
      font-size: 16px;
    }
    .categories {
      display: flex;
      justify-content: center;
      gap: 12px;
      background: #fff;
      padding: 10px 0;
      flex-wrap: wrap;
    }
    .categories button {
      background: #e7e7e7;
      border: none;
      padding: 8px 16px;
      border-radius: 5px;
      cursor: pointer;
      transition: background 0.3s ease;
    }
    .categories button.active,
    .categories button:hover {
      background: #007bff;
      color: white;
    }
    .products-grid {
      max-width: 1200px;
      margin: 20px auto;
      display: grid;
      grid-template-columns: repeat(auto-fit,minmax(220px,1fr));
      gap: 18px;
      padding: 0 10px;
    }
    .product-card {
      background: white;
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      overflow: hidden;
    }
    .product-card img {
      width: 100%;
      height: 160px;
      object-fit: contain;
      background: #f9f9f9;
    }
    .product-info {
      padding: 12px 15px;
      flex-grow: 1;
      display: flex;
      flex-direction: column;
    }
    .product-info h3 {
      margin: 0 0 8px 0;
      font-size: 18px;
      line-height: 1.2;
      min-height: 48px;
    }
    .product-info p {
      margin: 0 0 12px 0;
      font-weight: bold;
      font-size: 16px;
      color: #007bff;
    }
    .product-info .desc {
      font-size: 14px;
      color: #555;
      flex-grow: 1;
    }
    .product-info a {
      text-decoration: none;
      background: #28a745;
      color: white;
      padding: 8px;
      border-radius: 5px;
      text-align: center;
      font-weight: bold;
      margin-top: 10px;
      transition: background 0.3s ease;
    }
    .product-info a:hover {
      background: #218838;
    }
    .product-info button {
      margin-top: 8px;
      padding: 8px;
      border: none;
      border-radius: 5px;
      font-weight: bold;
      cursor: pointer;
      transition: background 0.3s ease;
    }
    .product-info button:disabled {
      background: #888;
      cursor: not-allowed;
    }
    .product-info button.addToCartBtn {
      background: #007bff;
      color: white;
    }
    .product-info button.addToCartBtn:hover:not(:disabled) {
      background: #0056b3;
    }
    .cart-btn {
      position: fixed;
      top: 20px;
      left: 20px;
      background: #ffc107;
      color: #212529;
      padding: 12px 18px;
      border-radius: 50px;
      font-weight: bold;
      cursor: pointer;
      box-shadow: 0 2px 6px rgba(0,0,0,0.15);
      z-index: 1000;
    }
    #cartCount {
      background: #dc3545;
      color: white;
      font-size: 14px;
      padding: 2px 7px;
      border-radius: 50%;
      margin-left: 6px;
      vertical-align: middle;
    }
    .modal {
      position: fixed;
      top: 0; left: 0; right: 0; bottom: 0;
      background: rgba(0,0,0,0.5);
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 2000;
    }
    .modal.hidden {
      display: none;
    }
    .modal-content {
      background: white;
      border-radius: 10px;
      width: 90%;
      max-width: 450px;
      max-height: 80vh;
      overflow-y: auto;
      padding: 20px;
      box-sizing: border-box;
      text-align: center;
    }
    .modal-content h2 {
      margin-top: 0;
    }
    #cartItems {
      list-style: none;
      padding: 0;
      margin: 15px 0 20px 0;
      max-height: 300px;
      overflow-y: auto;
      text-align: right;
    }
    #cartItems li {
      display: flex;
      justify-content: space-between;
      margin-bottom: 12px;
      border-bottom: 1px solid #ddd;
      padding-bottom: 8px;
      align-items: center;
    }
    #cartItems li button {
      background: #dc3545;
      border: none;
      color: white;
      padding: 4px 8px;
      border-radius: 5px;
      cursor: pointer;
    }
    #closeCartBtn {
      background: #007bff;
      border: none;
      color: white;
      font-size: 16px;
      padding: 12px;
      border-radius: 6px;
      width: 100%;
      cursor: pointer;
      transition: background 0.3s ease;
    }
    #closeCartBtn:hover {
      background: #0056b3;
    }
  </style>
</head>
<body>
  <header>
    <div class="logo">🛒 متجر الدروبشيبينج</div>
    <input type="search" id="searchInput" placeholder="ابحث عن منتجات..." />
  </header>

  <nav id="categoryNav" class="categories">
    <!-- الأقسام تتحط هنا ديناميك -->
  </nav>

  <main>
    <section id="products" class="products-grid"></section>
  </main>

  <div id="cart" class="cart-btn">🛒 <span id="cartCount">0</span></div>

  <div id="cartModal" class="modal hidden">
    <div class="modal-content">
      <h2>سلة المشتريات</h2>
      <ul id="cartItems"></ul>
      <button id="closeCartBtn">إغلاق</button>
    </div>
  </div>

  <script>
    const categoryNav = document.getElementById('categoryNav');
    const productsContainer = document.getElementById('products');
    const searchInput = document.getElementById('searchInput');
    const cartBtn = document.getElementById('cart');
    const cartCount = document.getElementById('cartCount');
    const cartModal = document.getElementById('cartModal');
    const cartItemsList = document.getElementById('cartItems');
    const closeCartBtn = document.getElementById('closeCartBtn');

    let productsData = [];
    let filteredProducts = [];
    let categories = [];
    let cart = [];

    async function fetchProducts() {
      try {
        const res = await fetch('data/products.json');
        productsData = await res.json();
        categories = Object.keys(productsData);
        renderCategories();
        filterProducts(categories[0]);
      } catch (error) {
        productsContainer.innerHTML = '<p>فشل تحميل المنتجات، حاول لاحقاً.</p>';
        console.error(error);
      }
    }

    function renderCategories() {
      categoryNav.innerHTML = '';
      categories.forEach((cat, idx) => {
        const btn = document.createElement('button');
        btn.textContent = toArabicCategory(cat);
        btn.dataset.category = cat;
        btn.classList.toggle('active', idx === 0);
        btn.addEventListener('click', () => {
          document.querySelectorAll('#categoryNav button').forEach(b => b.classList.remove('active'));
          btn.classList.add('active');
          filterProducts(cat);
        });
        categoryNav.appendChild(btn);
      });
    }

    function toArabicCategory(cat) {
      const map = {
        electronics: 'إلكترونيات',
        clothing: 'ملابس',
        sports: 'رياضة',
        home: 'المنزل والمطبخ',
        beauty: 'التجميل والعناية',
        toys: 'ألعاب وهوايات',
        accessories: 'إكسسوارات وهواتف',
        watches: 'ساعات ومجوهرات',
        cars: 'سيارات وقطع غيار',
        health: 'الصحة واللياقة',
      };
      return map[cat] || cat;
    }

    function filterProducts(category) {
      const searchTerm = searchInput.value.trim();
      filteredProducts = productsData[category].filter(p =>
        p.title.includes(searchTerm) || p.description.includes(searchTerm)
      );
      renderProducts(filteredProducts);
    }

    function renderProducts(products) {
      productsContainer.innerHTML = '';
      if (products.length === 0) {
        productsContainer.innerHTML = '<p style="text-align:center; width:100%;">لا توجد منتجات مطابقة للبحث.</p>';
        return;
      }
      products.forEach(prod => {
        const card = document.createElement('div');
        card.className = 'product-card';
        card.innerHTML = `
          <img src="${prod.image}" alt="${prod.title}" loading="lazy" />
          <div class="product-info">
            <h3>${prod.title}</h3>
            <p>${prod.price}</p>
            <p class="desc">${prod.description}</p>
            <a href="${prod.url}" target="_blank" rel="noopener noreferrer">رابط المنتج</a>
            <button class="addToCartBtn" ${prod.availability !== 'in_stock' ? 'disabled' : ''}>
              ${prod.availability === 'in_stock' ? 'أضف للسلة' : 'غير متوفر'}
            </button>
          </div>
        `;
        if (prod.availability !== 'in_stock') {
          card.querySelector('button').style.background = '#888';
          card.querySelector('button').style.cursor = 'not-allowed';
        }
        card.querySelector('button').addEventListener('click', () => addToCart(prod));
        productsContainer.appendChild(card);
      });
    }

    function addToCart(product) {
      const exist = cart.find(item => item.title === product.title);
      if (exist) {
        exist.quantity++;
      } else {
        cart.push({...product, quantity: 1});
      }
      updateCartCount();
    }

    function updateCartCount() {
      const count = cart.reduce((acc, item) => acc + item.quantity, 0);
      cartCount.textContent = count;
    }

    cartBtn.addEventListener('click', () => {
      renderCart();
      cartModal.classList.remove('hidden');
    });

    closeCartBtn.addEventListener('click', () => {
      cartModal.classList.add('hidden');
    });

    cartModal.addEventListener('click', e => {
      if (e.target === cartModal) {
        cartModal.classList.add('hidden');
      }
    });

    function renderCart() {
      cartItemsList.innerHTML = '';
      if (cart.length === 0) {
        cartItemsList.innerHTML = '<li>السلة فارغة</li>';
        return;
      }
      cart.forEach(item => {
        const li = document.createElement('li');
        li.innerHTML = `
          <span>${item.title} (x${item.quantity})</span>
          <span>${item.price}</span>
          <button>حذف</button>
        `;
        li.querySelector('button').addEventListener('click', () => {
          removeFromCart(item.title);
        });
        cartItemsList.appendChild(li);
      });
    }

    function removeFromCart(title) {
      cart = cart.filter(item => item.title !== title);
      updateCartCount();
      renderCart();
    }

    searchInput.addEventListener('input', () => {
      const activeBtn = document.querySelector('#categoryNav button.active');
      if (activeBtn) filterProducts(activeBtn.dataset.category);
    });

    fetchProducts();
  </script>
</body>
</html>

